"use strict";define("dummy/app",["exports","ember","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,l,n,o){var m=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,m=t.default.Application.extend({modulePrefix:o.default.modulePrefix,podModulePrefix:o.default.podModulePrefix,Resolver:l.default}),(0,n.default)(m,o.default.modulePrefix),e.default=m}),define("dummy/components/app-version",["exports","ember-cli-app-version/components/app-version","dummy/config/environment"],function(e,t,l){var n=l.default.APP.name,o=l.default.APP.version;e.default=t.default.extend({version:o,name:n})}),define("dummy/components/control-within-label",["exports","ember-rapid-forms/components/control-within-label"],function(e,t){e.default=t.default}),define("dummy/components/em-checkbox",["exports","ember-rapid-forms/components/em-checkbox"],function(e,t){e.default=t.default}),define("dummy/components/em-custom-input",["exports","ember-rapid-forms/components/em-custom-input"],function(e,t){e.default=t.default}),define("dummy/components/em-form-control-help",["exports","ember-rapid-forms/components/em-form-control-help"],function(e,t){e.default=t.default}),define("dummy/components/em-form-group",["exports","ember-rapid-forms/components/em-form-group"],function(e,t){e.default=t.default}),define("dummy/components/em-form-label",["exports","ember-rapid-forms/components/em-form-label"],function(e,t){e.default=t.default}),define("dummy/components/em-form-submit",["exports","ember-rapid-forms/components/em-form-submit"],function(e,t){e.default=t.default}),define("dummy/components/em-form",["exports","ember-rapid-forms/components/em-form"],function(e,t){e.default=t.default}),define("dummy/components/em-input",["exports","ember-rapid-forms/components/em-input"],function(e,t){e.default=t.default}),define("dummy/components/em-select",["exports","ember-rapid-forms/components/em-select"],function(e,t){e.default=t.default}),define("dummy/components/em-text",["exports","ember-rapid-forms/components/em-text"],function(e,t){e.default=t.default}),define("dummy/components/form-group-control",["exports","ember-rapid-forms/components/form-group-control"],function(e,t){e.default=t.default}),define("dummy/components/form-group",["exports","ember-rapid-forms/components/form-group"],function(e,t){e.default=t.default}),define("dummy/components/form-sample",["exports","ember"],function(e,t){e.default=t.default.Component.extend({layout:"default",genderOptions:t.default.A([{id:"M",name:"Male"},{id:"F",name:"Female"},{id:"O",name:"Other"}]),actions:{validate:function(){this.model.validate().then(this._showErrors())},clearValidations:function(){this.model.hideErrors()},submit:function(){return alert("Submitted!")},layout:function(e){return this.set("layout",e)}},_showErrors:function(){this.model.showErrors()}})}),define("dummy/components/x-sidebar",["exports","ember"],function(e,t){e.default=t.default.Component.extend({needs:["application"],menu:t.default.A([{route:"overview",text:"Overview",items:[]},{route:"getstarted",text:"Getting started",items:[]},{route:"form",text:"Form",items:[]},{route:"controls",text:"Controls",items:t.default.A([{route:"controls.input",text:"Input"},{route:"controls.text",text:"Textarea"},{route:"controls.checkbox",text:"Checkbox"},{route:"controls.select",text:"Select"},{route:"controls.html5",text:"Html5"},{route:"controls.custom-submit",text:"Custom Submit"},{route:"controls.wrapped-input",text:"Wrapped Input"},{route:"controls.custom-styles",text:"Custom Styles"}])}])})}),define("dummy/controllers/controls/custom-submit",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({actions:{submit:function(){return alert("Logged in!")}}})}),define("dummy/controllers/controls/select",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({genderOptions:t.default.A([{id:"M",name:"Male"},{id:"F",name:"Female"},{id:"O",name:"Other"}])})}),define("dummy/controllers/controls/wrapped-input",["exports","ember"],function(e,t){e.default=t.default.Controller.extend()}),define("dummy/controllers/form",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({actions:{someAction:function(){alert("Action triggered")}}})}),define("dummy/helpers/and",["exports","ember","ember-truth-helpers/helpers/and"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.andHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.andHelper)),e.default=n}),define("dummy/helpers/eq",["exports","ember","ember-truth-helpers/helpers/equal"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.equalHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.equalHelper)),e.default=n}),define("dummy/helpers/gt",["exports","ember","ember-truth-helpers/helpers/gt"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.gtHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.gtHelper)),e.default=n}),define("dummy/helpers/gte",["exports","ember","ember-truth-helpers/helpers/gte"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.gteHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.gteHelper)),e.default=n}),define("dummy/helpers/is-array",["exports","ember","ember-truth-helpers/helpers/is-array"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.isArrayHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.isArrayHelper)),e.default=n}),define("dummy/helpers/lt",["exports","ember","ember-truth-helpers/helpers/lt"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.ltHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.ltHelper)),e.default=n}),define("dummy/helpers/lte",["exports","ember","ember-truth-helpers/helpers/lte"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.lteHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.lteHelper)),e.default=n}),define("dummy/helpers/not-eq",["exports","ember","ember-truth-helpers/helpers/not-equal"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.notEqualHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.notEqualHelper)),e.default=n}),define("dummy/helpers/not",["exports","ember","ember-truth-helpers/helpers/not"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.notHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.notHelper)),e.default=n}),define("dummy/helpers/or",["exports","ember","ember-truth-helpers/helpers/or"],function(e,t,l){var n=null;t.default.Helper?n=t.default.Helper.helper(l.orHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(l.orHelper)),e.default=n}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e.default=t.default}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,l){e.default={name:"App Version",initialize:(0,t.default)(l.default.APP.name,l.default.APP.version)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,l){e.default={name:"ember-data",initialize:t.default}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,l){function n(){var e=arguments[1]||arguments[0];if(!1!==l.default.exportApplicationGlobal){var n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else{if("undefined"==typeof self)return;n=self}var o,m=l.default.exportApplicationGlobal;o="string"==typeof m?m:t.default.String.classify(l.default.modulePrefix),n[o]||(n[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[o]}}))}}e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("dummy/initializers/hightlightjs",["exports","ember"],function(e,t){e.default={name:"hightlightjs",initialize:function(){return t.default.Route.reopen({renderTemplate:function(){return this._super(),t.default.run.next(this,function(){return $("pre code").each(function(e,t){return hljs.highlightBlock(t)})})}})}}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("dummy/initializers/scrolltotop",["exports","ember"],function(e,t){e.default={name:"scroll-top",initialize:function(){t.default.Route.reopen({renderTemplate:function(){this._super(),$("html, body").animate({scrollTop:0},"fast")}})}}}),define("dummy/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("dummy/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:function(){}}}),define("dummy/initializers/truth-helpers",["exports","ember","ember-truth-helpers/utils/register-helper","ember-truth-helpers/helpers/and","ember-truth-helpers/helpers/or","ember-truth-helpers/helpers/equal","ember-truth-helpers/helpers/not","ember-truth-helpers/helpers/is-array","ember-truth-helpers/helpers/not-equal","ember-truth-helpers/helpers/gt","ember-truth-helpers/helpers/gte","ember-truth-helpers/helpers/lt","ember-truth-helpers/helpers/lte"],function(e,t,l,n,o,m,s,a,r,u,i,p,d){function c(){t.default.Helper||((0,l.registerHelper)("and",n.andHelper),(0,l.registerHelper)("or",o.orHelper),(0,l.registerHelper)("eq",m.equalHelper),(0,l.registerHelper)("not",s.notHelper),(0,l.registerHelper)("is-array",a.isArrayHelper),(0,l.registerHelper)("not-eq",r.notEqualHelper),(0,l.registerHelper)("gt",u.gtHelper),(0,l.registerHelper)("gte",i.gteHelper),(0,l.registerHelper)("lt",p.ltHelper),(0,l.registerHelper)("lte",d.lteHelper))}e.initialize=c,e.default={name:"truth-helpers",initialize:c}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("dummy/mixins/ember-cp-validations-helper",["exports","ember-rapid-forms/mixins/ember-cp-validations-helper"],function(e,t){e.default=t.default}),define("dummy/models/credentials",["exports","ember","ember-data","ember-cp-validations","ember-rapid-forms/mixins/input-errors","ember-rapid-forms/mixins/ember-cp-validations-helper"],function(e,t,l,n,o,m){var s=(0,n.buildValidations)({user:[(0,n.validator)("presence",!0),(0,n.validator)("length",{min:3})],password:[(0,n.validator)("presence",!0),(0,n.validator)("length",{min:4})]}),a=l.default.Model.extend(s,o.default,m.default,{user:l.default.attr("string"),password:l.default.attr("string"),isntValid:t.default.computed.not("isValid")});e.default=a}),define("dummy/models/simple_person",["exports","ember","ember-data","ember-cp-validations","ember-rapid-forms/mixins/input-errors","ember-rapid-forms/mixins/ember-cp-validations-helper"],function(e,t,l,n,o,m){var s=function(){function e(e,t){var l=[],n=!0,o=!1,m=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(l.push(s.value),!t||l.length!==t);n=!0);}catch(e){o=!0,m=e}finally{try{!n&&a.return&&a.return()}finally{if(o)throw m}}return l}return function(t,l){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,l);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=(0,n.buildValidations)({fullName:[(0,n.validator)("format",{regex:/^[^\s]+(\s[^\s]+)+$/,message:"enter a first and last name"}),(0,n.validator)("presence",!0)],password:[(0,n.validator)("presence",!0),(0,n.validator)("length",{min:6})],comment:(0,n.validator)("presence",!0),gender:(0,n.validator)("presence",!0)}),r=l.default.Model.extend(a,o.default,m.default,{firstName:l.default.attr("string",{defaultValue:null}),lastName:l.default.attr("string",{defaultValue:null}),password:l.default.attr("string"),comment:l.default.attr("string"),active:l.default.attr("boolean"),gender:l.default.attr("string"),nameHasValue:t.default.computed("fullName",{get:function(){return!!this.get("fullName")}}),fullName:t.default.computed("firstName","lastName",{get:function(){return this.get("firstName")?this.get("firstName")+" "+this.get("lastName"):null},set:function(e,t){var l=t.split(/\s+/),n=s(l,2),o=n[0],m=n[1];return o=o||null,m=m||null,this.setProperties({firstName:o,lastName:m}),t}}),asjson:t.default.computed("fullName","firstName","lastName","password","comment","active","gender",function(){return"fullName: "+this.get("fullName")+", firstName: "+this.get("firstName")+", lastName: "+this.get("lastName")+", password: "+this.get("password")+", comment: "+this.get("comment")+", active: "+this.get("active")+", gender: "+this.get("gender")})});e.default=r}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,l){var n=t.default.Router.extend({location:l.default.locationType,rootURL:l.default.rootURL});n.map(function(){this.route("overview"),this.route("getstarted"),this.route("quickexample"),this.route("form"),this.route("controls",{resetNamespace:!0},function(){this.route("custom-submit"),this.route("input"),this.route("text"),this.route("checkbox"),this.route("select"),this.route("html5"),this.route("wrapped-input"),this.route("custom-styles")})}),e.default=n}),define("dummy/routes/controls",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person",{name:"",password:"",comment:"",active:!1,gender:"M"})}})}),define("dummy/routes/controls/custom-submit",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("credentials")}})}),define("dummy/routes/controls/select",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person")}})}),define("dummy/routes/controls/wrapped-input",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person")}})}),define("dummy/routes/form",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person",{name:""})}})}),define("dummy/routes/getstarted",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person",{name:"",password:"",comment:"",active:!1,gender:"M"})}})}),define("dummy/routes/index",["exports","ember"],function(e,t){e.default=t.default.Route.extend({beforeModel:function(){return this.transitionTo("overview")}})}),define("dummy/routes/overview",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return this.get("store").createRecord("simple_person",{name:"",password:"",comment:"",active:!1,gender:"M"})}})}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"xM7R0JTa",block:'{"statements":[["append",["unknown",["navbar"]],false],["text","\\n"],["open-element","div",[]],["static-attr","class","container"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","row"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","col-sm-3 col-xs-12"],["flush-element"],["text","\\n            "],["append",["unknown",["x-sidebar"]],false],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","col-sm-9 col-xs-12 page"],["flush-element"],["text","\\n            "],["append",["unknown",["outlet"]],false],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/components/form-sample",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"hF1rHd9v",block:'{"statements":[["open-element","div",[]],["static-attr","class","btn-group"],["flush-element"],["text","\\n    "],["open-element","button",[]],["static-attr","type","button"],["static-attr","class","btn btn-default"],["modifier",["action"],[["get",[null]],"layout","default"]],["flush-element"],["text","Default"],["close-element"],["text","\\n    "],["open-element","button",[]],["static-attr","type","button"],["static-attr","class","btn btn-default"],["modifier",["action"],[["get",[null]],"layout","horizontal"]],["flush-element"],["text","Horizontal"],["close-element"],["text","\\n    "],["open-element","button",[]],["static-attr","type","button"],["static-attr","class","btn btn-default"],["modifier",["action"],[["get",[null]],"layout","inline"]],["flush-element"],["text","Inline"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n\\n"],["block",["em-form"],null,[["model","formLayout"],[["get",["model"]],["get",["layout"]]]],0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["form","input"],null,[["property","label","placeholder","canShowErrors"],["fullName","Full Name","Enter a full name...",["get",["model","visibleErrors","fullName"]]]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["property","label","placeholder","type","disabled","canShowErrors"],["password","Password","And password...","password",["get",["nameHasValue"]],["get",["model","visibleErrors","password"]]]]],false],["text","\\n    "],["append",["helper",["form","text"],null,[["property","label","placeholder","rows","canShowErrors"],["comment","Comment","Comment please..",4,["get",["model","visibleErrors","comment"]]]]],false],["text","\\n    "],["append",["helper",["form","select"],null,[["property","label","prompt","content","optionValuePath","optionLabelPath","canShowErrors"],["gender","Gender","-select-",["get",["genderOptions"]],"id","name",["get",["model","visibleErrors","gender"]]]]],false],["text","\\n    "],["append",["helper",["form","checkbox"],null,[["property","label","canShowErrors"],["active","Active?",["get",["model","visibleErrors","active"]]]]],false],["text","\\n    "],["open-element","div",[]],["static-attr","class","form-group"],["flush-element"],["text","\\n        "],["open-element","button",[]],["static-attr","class","btn btn-default"],["modifier",["action"],[["get",[null]],"validate"]],["flush-element"],["text","Run Validations"],["close-element"],["text","\\n        "],["open-element","button",[]],["static-attr","class","btn btn-default"],["modifier",["action"],[["get",[null]],"clearValidations"]],["flush-element"],["text","Clear Validations"],["close-element"],["text","\\n    "],["close-element"],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/form-sample.hbs"}})}),define("dummy/templates/components/my-custom-input",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"cSzz1GVC",block:'{"statements":[["append",["helper",["form","input"],null,[["error","placeholder"],[["get",["showError"]],"Wrapped with ugly border"]]],false],["text","\\n"],["block",["if"],[["get",["showError"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    Extra error data !\\n"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/my-custom-input.hbs"}})}),define("dummy/templates/components/x-sidebar",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"ioWJF2I8",block:'{"statements":[["open-element","div",[]],["static-attr","class","well sidebar"],["flush-element"],["text","\\n    "],["open-element","ul",[]],["static-attr","class","nav"],["flush-element"],["text","\\n"],["block",["each"],[["get",["menu"]]],null,4],["text","    "],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["append",["unknown",["item","text"]],false]],"locals":[]},{"statements":[["text","                    "],["open-element","li",[]],["flush-element"],["block",["link-to"],[["get",["item","route"]]],null,0],["close-element"],["text","\\n"]],"locals":["item"]},{"statements":[["text","                "],["open-element","ul",[]],["static-attr","class","nav"],["flush-element"],["text","\\n"],["block",["each"],[["get",["link","items"]]],null,1],["text","                "],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["append",["unknown",["link","text"]],false]],"locals":[]},{"statements":[["text","            "],["open-element","li",[]],["flush-element"],["block",["link-to"],[["get",["link","route"]]],null,3],["close-element"],["text","\\n"],["block",["if"],[["get",["link","items"]]],null,2]],"locals":["link"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/x-sidebar.hbs"}})}),define("dummy/templates/controls",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"dWOpRoPN",block:'{"statements":[["append",["unknown",["outlet"]],false]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls.hbs"}})}),define("dummy/templates/controls/checkbox",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"ePpd7VJV",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Checkbox"],["close-element"],["text","\\n\\nCheckboxes let a user select or deselect an option.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form submitButton=false model=model as |form|}}\\n    "],["text","{{form.checkbox label=\\"Active?\\" property=\\"active\\"}}\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["submitButton","model"],[false,["get",["model"]]]],0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    isActive: "],["append",["unknown",["model","active"]],false],["text","\\n"],["close-element"],["text","\\n\\n\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Parameters"],["close-element"],["text","\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Param name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Description"],["close-element"],["open-element","th",[]],["flush-element"],["text","Default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","label"],["close-element"],["open-element","td",[]],["flush-element"],["text","The label of the input"],["close-element"],["open-element","td",[]],["flush-element"],["text","A humanized form of the property name"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","property"],["close-element"],["open-element","td",[]],["flush-element"],["text","The property name in the model instance bound to the form"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, value is required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","cid"],["close-element"],["open-element","td",[]],["flush-element"],["text","If set, the specified identifier will be set as the "],["open-element","i",[]],["flush-element"],["text","id"],["close-element"],["text"," attribute of the "],["open-element","i",[]],["flush-element"],["text","input"],["close-element"],["text"," tag."],["close-element"],["open-element","td",[]],["flush-element"],["text","Ember\'s default ID"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","elementClass"],["close-element"],["open-element","td",[]],["flush-element"],["text","The class of the input (checkbox) element."],["close-element"],["open-element","td",[]],["flush-element"],["text","ember-checkbox"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","disabled"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 disabled attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","required"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 required attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autofocus"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 autofocus attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["form","checkbox"],null,[["label","property"],["Active?","active"]]],false],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/checkbox.hbs"}})}),define("dummy/templates/controls/custom-styles",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"ghElkq10",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","Custom Styles"],["close-element"],["text","\\n\\nYou can modify the element styles directly by using the elementClass property.\\nYou simply assign your custom css classes. You can use this on inputs, selects\\nand textareas.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form model=model as |form|}}\\n    "],["text","{{form.input label=\\"Name\\" property=\\"user\\" elementClass=\\"fancyLogin\\"}}\\n    "],["text","{{form.input label=\\"Password\\" property=\\"password\\" elementClass=\\"uglyPassword\\"}}\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\nThis will apply those classes directly to the input element, now lets apply some\\nobvious css changes.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","CSS"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","css"],["flush-element"],["text","\\n      .fancyLogin {\\n        padding:20px;\\n        border:30px solid transparent;\\n        border-image: repeating-linear-gradient(-45deg, #b5a560, #d4bc58 5px, white 5px, white 10px) 30 30 round;\\n      }\\n\\n      .uglyPassword {\\n        padding:20px;\\n        border:30px solid transparent;\\n        border-image: repeating-radial-gradient(#8335c9, #a55ee4, 5px, white 5px, white 10px) 1 11 round;\\n      }\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model"],[["get",["model"]]]],0],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["form","input"],null,[["label","property","elementClass"],["Name","user","fancyLogin"]]],false],["text","\\n      "],["append",["helper",["form","input"],null,[["label","property","elementClass"],["Password","password","uglyPassword"]]],false],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/custom-styles.hbs"}})}),define("dummy/templates/controls/custom-submit",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"UwAwjPpz",
block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Custom Submit Button"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","\\nIt is possible to have a custom submit button by not rendering the default submit button and adding a custom button of your own.\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form model=model as |form|}}\\n    "],["text","{{form.input label=\\"Name\\" property=\\"user\\"}}\\n    "],["text","{{form.input label=\\"Password\\" property=\\"password\\"}}\\n    <div class=\\"form-actions\\">\\n        <input disabled="],["text","{{model.isntValid}} type=\\"submit\\" class=\\"btn btn-primary\\" value=\\"Login\\">\\n    </div>\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","\\nFew things happen here:\\n"],["open-element","ol",[]],["flush-element"],["text","\\n    "],["open-element","li",[]],["flush-element"],["text","Bind the controller\'s model to the "],["open-element","i",[]],["flush-element"],["text","model"],["close-element"],["text"," property of the form component."],["close-element"],["text","\\n    "],["open-element","li",[]],["flush-element"],["text","Disable rendering the default submit button by setting "],["open-element","i",[]],["flush-element"],["text","submitButton=false"],["close-element"],["close-element"],["text","\\n    "],["open-element","li",[]],["flush-element"],["text","We add an input button (type must be "],["open-element","i",[]],["flush-element"],["text","submit"],["close-element"],["text",") and bind its "],["open-element","i",[]],["flush-element"],["text","disabled"],["close-element"],["text"," property to the "],["open-element","i",[]],["flush-element"],["text","isntValid"],["close-element"],["text"," property of our model"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Controller/Model"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","coffeescript"],["flush-element"],["text","\\n#Our Model\\nconst Credentials = DS.Model.extend(EmberValidations, {\\n  user: DS.attr(\'string\'),\\n  password: DS.attr(\'string\'),\\n  #Opposite if isValid, required to judge whether the submit button should be disabled or not.\\n  isntValid: Ember.computed.not(\'isValid\')\\n});\\n\\nCredentials.reopen({\\n  validations: {\\n    user: {\\n      presence: true,\\n      length: {\\n        minimum: 3\\n      }\\n    },\\n    password: {\\n      presence: true,\\n      length: {\\n        minimum: 4\\n      }\\n    }\\n  }\\n});\\n\\n\\n#Our controller\\nexport default Em.Controller.extend({\\n  actions: {\\n    submit() {\\n      return alert(\\"Logged in!\\");\\n    }\\n  }\\n});\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model","submitButton"],[["get",["model"]],false]],0],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    name: "],["append",["unknown",["model","user"]],false],["text",", password: "],["append",["unknown",["model","password"]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["form","input"],null,[["label","property"],["Name","user"]]],false],["text","\\n        "],["append",["helper",["form","input"],null,[["label","property"],["Password","password"]]],false],["text","\\n        "],["open-element","div",[]],["static-attr","class","form-actions"],["flush-element"],["text","\\n            "],["open-element","input",[]],["dynamic-attr","disabled",["unknown",["model","isntValid"]],null],["static-attr","type","submit"],["static-attr","class","btn btn-primary"],["static-attr","value","Login"],["flush-element"],["close-element"],["text","\\n        "],["close-element"],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/custom-submit.hbs"}})}),define("dummy/templates/controls/html5",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"/ON7iIUb",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Html5"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","Here are some html5 controls."],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","The controls are just standard "],["block",["link-to"],["controls.input"],null,1],["text"," tag with different "],["open-element","i",[]],["flush-element"],["text","type"],["close-element"],["text"," property."],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form model=model as |form|}}\\n    "],["text","{{form.input label=\\"Email\\" property=\\"email\\" type=\\"email\\"}}\\n    "],["text","{{form.input label=\\"Telephone\\" property=\\"tel\\" type=\\"tel\\"}}\\n    "],["text","{{form.input label=\\"Range\\" property=\\"range\\" type=\\"range\\"}}\\n    "],["text","{{form.input label=\\"Date\\" property=\\"date\\" type=\\"date\\"}}\\n    "],["text","{{form.input label=\\"Time\\" property=\\"time\\" type=\\"time\\"}}\\n    "],["text","{{form.input label=\\"Month\\" property=\\"month\\" type=\\"month\\"}}\\n    "],["text","{{form.input label=\\"Week\\" property=\\"week\\" type=\\"week\\"}}\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model","submitButton","formLayout"],[["get",["model"]],false,"horizontal"]],0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    Email: "],["append",["unknown",["model","email"]],false],["text",", Telephone: "],["append",["unknown",["model","tel"]],false],["text",", Range: "],["append",["unknown",["model","range"]],false],["text",", Date: "],["append",["unknown",["model","date"]],false],["text",", Time: "],["append",["unknown",["model","time"]],false],["text",", Month: "],["append",["unknown",["model","month"]],false],["text",", Week: "],["append",["unknown",["model","week"]],false],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["form","input"],null,[["label","property","type"],["Email","email","email"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Telephone","tel","tel"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Range","range","range"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Date","date","date"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Time","time","time"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Month","month","month"]]],false],["text","\\n    "],["append",["helper",["form","input"],null,[["label","property","type"],["Week","week","week"]]],false],["text","\\n"]],"locals":["form"]},{"statements":[["text","{{em-input}}"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/html5.hbs"}})}),define("dummy/templates/controls/index",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"noHBUj6b",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","Controls"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","Please choose one of the controls from the left menu"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/index.hbs"}})}),define("dummy/templates/controls/input",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"5Fa68Ic0",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Input"],["close-element"],["text","\\n\\nStandard "],["open-element","i",[]],["flush-element"],["text","<input>"],["close-element"],["text"," tag which is a one-line input field that a user can enter text into.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form model=model as |form|}}\\n    "],["text","{{form.input label=\\"First Name\\" property=\\"firstName\\" cid=\\"FID\\"}}\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["submit_button","model"],[false,["get",["model"]]]],0],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    inputData: "],["append",["unknown",["model","firstName"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Parameters"],["close-element"],["text","\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Param name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Description"],["close-element"],["open-element","th",[]],["flush-element"],["text","Default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","label"],["close-element"],["open-element","td",[]],["flush-element"],["text","The label of the input"],["close-element"],["open-element","td",[]],["flush-element"],["text","A humanized form of the property name"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","property"],["close-element"],["open-element","td",[]],["flush-element"],["text","The property name in the model instance bound to the form"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, value is required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","type"],["close-element"],["open-element","td",[]],["flush-element"],["text","The type of the input"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, can be "],["open-element","i",[]],["flush-element"],["text","password, email"],["close-element"],["text"," or any other browser supported input type"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","cid"],["close-element"],["open-element","td",[]],["flush-element"],["text","If set, the specified identifier will be set as the "],["open-element","i",[]],["flush-element"],["text","id"],["close-element"],["text"," attribute of the "],["open-element","i",[]],["flush-element"],["text","input"],["close-element"],["text"," tag."],["close-element"],["open-element","td",[]],["flush-element"],["text","Ember\'s default ID"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","name"],["close-element"],["open-element","td",[]],["flush-element"],["text","The name of the input element."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","placeholder"],["close-element"],["open-element","td",[]],["flush-element"],["text","The standard input placeholder."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","elementClass"],["close-element"],["open-element","td",[]],["flush-element"],["text","The class of the input element concatenated with the default \'form-control\' class."],["close-element"],["open-element","td",[]],["flush-element"],["text","form-control"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autoresize"],["close-element"],["open-element","td",[]],["flush-element"],["text","If true, will activate automatic resizing from "],["open-element","a",[]],["static-attr","href","https://github.com/tim-evans/ember-autoresize"],["static-attr","target","_blank"],["flush-element"],["text","ember-autoresize addon"],["close-element"],["text","."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","disabled"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 disabled attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","required"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 required attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autofocus"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 autofocus attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","readonly"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 readonly attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","onKeyUp"],["close-element"],["open-element","td",[]],["flush-element"],["text","If true, errors will show as soon as the user types in the field."],["close-element"],["open-element","td",[]],["flush-element"],["text","false"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["form","input"],null,[["label","property","cid"],["First Name","firstName","FID"]]],false],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/input.hbs"}})}),define("dummy/templates/controls/select",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"oSxijFG+",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Select"],["close-element"],["text","\\nSelectbox let a user select one item of a multi pre defined options.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup/Code"],["close-element"],["text","\\n"],["open-element","h3",[]],["flush-element"],["text","Template Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{form.select\\n    label=\\"Gender\\"\\n    property=\\"gender\\"\\n    content=genderOptions\\n    optionValuePath=\\"id\\"\\n    optionLabelPath=\\"name\\"\\n    prompt=\\"--select--\\"}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","h3",[]],["flush-element"],["text","Controller Code"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","coffeescript"],["flush-element"],["text","\\nApp.ControlsSelectController = Ember.Controller.extend({\\n    // Ember.A ist only neccessary when prototype-extensions are turned off\\n    genderOptions: Ember.A([\\n        {id: \'M\', name: \'Male\'}\\n        {id: \'F\', name: \'Female\'}\\n        {id: \'O\', name: \'Other\'}\\n    ])\\n})\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model","submitButton"],[["get",["model"]],false]],1],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    Single: "],["append",["unknown",["model","single"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result with multiple=true"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model","submitButton"],[["get",["model"]],false]],0],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    Multi: "],["append",["unknown",["model","multi"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Parameters"],["close-element"],["text","\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Param name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Description"],["close-element"],["open-element","th",[]],["flush-element"],["text","Default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","label"],["close-element"],["open-element","td",[]],["flush-element"],["text","The label of the input"],["close-element"],["open-element","td",[]],["flush-element"],["text","A humanized form of the property name"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","property"],["close-element"],["open-element","td",[]],["flush-element"],["text","The property name in the model instance bound to the form"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, value is required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","prompt"],["close-element"],["open-element","td",[]],["flush-element"],["text","Prompt a default selection with the given value"],["close-element"],["open-element","td",[]],["flush-element"],["text","none"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","content"],["close-element"],["open-element","td",[]],["flush-element"],["text","an array of strings/objects where each element is displayed as a possible selection"],["close-element"],["open-element","td",[]],["flush-element"],["text","none"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","optionLabelPath"],["close-element"],["open-element","td",[]],["flush-element"],["text","the path on each object to the desired property to be displayed as the label of the selection"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","optionValuePath"],["close-element"],["open-element","td",[]],["flush-element"],["text","the path on each object to the desired property value of the selection"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","multiple"],["close-element"],["open-element","td",[]],["flush-element"],["text","If true multiple item selection will be supported."],["close-element"],["open-element","td",[]],["flush-element"],["text","false, optional."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","disabled"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 disabled attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","required"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 required attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autofocus"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 autofocus attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","size"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 size attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","0"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["form","select"],null,[["label","content","optionValuePath","optionLabelPath","multiple","prompt","property"],["Gender",["get",["genderOptions"]],"id","name",true,"--select--","multi"]]],false],["text","\\n"]],"locals":["form"]},{"statements":[["text","        "],["append",["helper",["form","select"],null,[["label","content","optionValuePath","optionLabelPath","prompt","property"],["Gender",["get",["genderOptions"]],"id","name","--select--","single"]]],false],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/select.hbs"}})}),define("dummy/templates/controls/text",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"zq/JSuy9",
block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Text Area"],["close-element"],["text","\\n\\nStandard "],["open-element","i",[]],["flush-element"],["text","<textarea>"],["close-element"],["text"," tag which is a multi-line text input control.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{form.text label=\\"Comment\\" property=\\"comment\\" rows=3}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["submitButton","model"],[false,["get",["model"]]]],0],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    Comment: "],["append",["unknown",["model","comment"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Parameters"],["close-element"],["text","\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Param name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Description"],["close-element"],["open-element","th",[]],["flush-element"],["text","Default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","label"],["close-element"],["open-element","td",[]],["flush-element"],["text","The label of the input"],["close-element"],["open-element","td",[]],["flush-element"],["text","A humanized form of the property name"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","property"],["close-element"],["open-element","td",[]],["flush-element"],["text","The property name in the model instance bound to the form"],["close-element"],["open-element","td",[]],["flush-element"],["text","none, value is required."],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","rows"],["close-element"],["open-element","td",[]],["flush-element"],["text","Specifies the height of the text area (in lines)"],["close-element"],["open-element","td",[]],["flush-element"],["text","Browser specific, usually 2"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","cols"],["close-element"],["open-element","td",[]],["flush-element"],["text","Specifies the width of the text area (in columns)"],["close-element"],["open-element","td",[]],["flush-element"],["text","Browser specific, usually 20"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","cid"],["close-element"],["open-element","td",[]],["flush-element"],["text","If set, the specified identifier will be set as the "],["open-element","i",[]],["flush-element"],["text","id"],["close-element"],["text"," attribute of the "],["open-element","i",[]],["flush-element"],["text","input"],["close-element"],["text"," tag."],["close-element"],["open-element","td",[]],["flush-element"],["text","Ember\'s default ID"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","name"],["close-element"],["open-element","td",[]],["flush-element"],["text","The name of the input element."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","placeholder"],["close-element"],["open-element","td",[]],["flush-element"],["text","The standard input placeholder."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","elementClass"],["close-element"],["open-element","td",[]],["flush-element"],["text","The class of the input element concatenated with the default \'form-control\' class."],["close-element"],["open-element","td",[]],["flush-element"],["text","form-control"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autoresize"],["close-element"],["open-element","td",[]],["flush-element"],["text","If true, will activate automatic resizing from "],["open-element","a",[]],["static-attr","href","https://github.com/tim-evans/ember-autoresize"],["static-attr","target","_blank"],["flush-element"],["text","ember-autoresize addon"],["close-element"],["text","."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","disabled"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 disabled attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","required"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 required attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","autofocus"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 autofocus attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","readonly"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard HTML5 readonly attribute."],["close-element"],["open-element","td",[]],["flush-element"],["text","null"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","onKeyUp"],["close-element"],["open-element","td",[]],["flush-element"],["text","If true, errors will show as soon as the user types in the field."],["close-element"],["open-element","td",[]],["flush-element"],["text","false"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","    "],["append",["helper",["form","text"],null,[["label","property","rows"],["Comment","comment",3]]],false],["text","\\n"]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/text.hbs"}})}),define("dummy/templates/controls/wrapped-input",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"OE3o2MCK",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Input"],["close-element"],["text","\\n\\nYou can enrich the input control by creating your own component that wraps the input control,\\nThis gives you the freedom to support extra visual effects when neccessary.\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Template Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form model=model formLayout=layout as |form|}}\\n    "],["text","{{form.input label=\\"Name\\" property=\\"name\\"}}\\n    "],["text","{{my-custom-input label=\\"Name\\" property=\\"name\\"}}\\n    "],["text","{{#form.custom-input label=\\"Password\\" property=\\"password\\" name=\\"property\\" as |customInput|}}\\n        "],["text","{{input value=model.password type=\\"password\\" name=customInput.name}}\\n    "],["text","{{/form.custom-input}}\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","The custom component code"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","coffeescript"],["flush-element"],["text","\\nWrappedInputComponent = Em.Component.extend({\\n    attributeBindings: [\'style\'],\\n    style: Ember.computed({\\n        get:function(){\\n            return \\"border: dotted 2px;\\"\\n        }\\n    })\\n})\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","The custom component template"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{em-input error=showError placeholder=\\"Wrapped with ugly border\\"}}\\n"],["text","{{#if showError}}\\n    Extra error data !\\n"],["text","{{/if}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["model","formLayout"],[["get",["model"]],["get",["layout"]]]],1],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["input"],null,[["value","type","name"],[["get",["model","password"]],"password",["get",["customInput","name"]]]]],false],["text","\\n"]],"locals":["customInput"]},{"statements":[["text","    "],["append",["helper",["form","input"],null,[["label","property"],["Name","name"]]],false],["text","\\n    "],["append",["helper",["my-custom-input"],null,[["label","property","form"],["Name","name",["get",["form"]]]]],false],["text","\\n"],["block",["form","custom-input"],null,[["label","property","name"],["Password","password","property"]],0]],"locals":["form"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/controls/wrapped-input.hbs"}})}),define("dummy/templates/dummy",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"7Nh+bqQG",block:'{"statements":[["text","dummy!"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/dummy.hbs"}})}),define("dummy/templates/form",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"QCs59LMT",block:'{"statements":[["open-element","h3",[]],["flush-element"],["text","Form"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","\\n"],["text","{{em-form}} is rendered as HTML "],["open-element","i",[]],["flush-element"],["text","<form>"],["close-element"],["text"," tag and acts as a container for the input fields\\nof the form.\\n"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\nThe form component can be bound to a "],["open-element","i",[]],["flush-element"],["text","model"],["close-element"],["text"," to support better bindings & validations, it also can get rendered in different layouts.\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Markup"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","handlebars"],["flush-element"],["text","\\n"],["text","{{#em-form formLayout=\\"horizontal\\" model=someModel action=\\"some-action\\" as |form|}}\\n    "],["text","{{form.input label=\\"Name\\" property=\\"name\\"}}\\n    other controls here...\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Result"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n"],["block",["em-form"],null,[["formLayout","model","action"],["horizontal",["get",["model"]],"someAction"]],0],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Parameters"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","{{em-form}} can accept the following parameters"],["close-element"],["text","\\n\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Param name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Description"],["close-element"],["open-element","th",[]],["flush-element"],["text","Default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","formLayout"],["close-element"],["open-element","td",[]],["flush-element"],["text","Can be: default | inline | horizontal"],["close-element"],["open-element","td",[]],["flush-element"],["text","default"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","model"],["close-element"],["open-element","td",[]],["flush-element"],["text","Can be bound to some model, then every control\'s "],["open-element","i",[]],["flush-element"],["text","property"],["close-element"],["text"," will be bound to the given model\'s property."],["close-element"],["open-element","td",[]],["flush-element"],["text","none"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","action"],["close-element"],["open-element","td",[]],["flush-element"],["text","The action to invoke on the controller when form is submitted."],["close-element"],["open-element","td",[]],["flush-element"],["text","submit"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","submitButton"],["close-element"],["open-element","td",[]],["flush-element"],["text","boolean, if true a submit button will be rendered."],["close-element"],["open-element","td",[]],["flush-element"],["text","true"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","validationIcons"],["close-element"],["open-element","td",[]],["flush-element"],["text","boolean, if true validation icons will be rendered per input control."],["close-element"],["open-element","td",[]],["flush-element"],["text","true"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","showErrorsOnRender"],["close-element"],["open-element","td",[]],["flush-element"],["text","boolean, display errors when the form is rendered"],["close-element"],["open-element","td",[]],["flush-element"],["text","false"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","showErrorsOnFocusIn"],["close-element"],["open-element","td",[]],["flush-element"],["text","boolean, display errors when an input if focused"],["close-element"],["open-element","td",[]],["flush-element"],["text","false"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Update to after 1.0.0-beta10"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","To Update to a version after 1.0.0-beta10 "],["text","{{em-form}} now should be yielded as a form and has the following attributes on the hash"],["close-element"],["text","\\n\\n"],["open-element","table",[]],["static-attr","class","table table-striped"],["flush-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","th",[]],["flush-element"],["text","Attribute Name"],["close-element"],["open-element","th",[]],["flush-element"],["text","Old Element"],["close-element"],["open-element","th",[]],["flush-element"],["text","description"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","input"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-input"],["close-element"],["open-element","td",[]],["flush-element"],["text","Standard element used to create a input field"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","checkbox"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-checkbox"],["close-element"],["open-element","td",[]],["flush-element"],["text","Element used to create a checkbox"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","select"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-select"],["close-element"],["open-element","td",[]],["flush-element"],["text","Element used to create a Select box"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","text"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-text"],["close-element"],["open-element","td",[]],["flush-element"],["text","Element used to create a Textarea"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","custom-input"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-custom-input"],["close-element"],["open-element","td",[]],["flush-element"],["text","Element used to create a custom element"],["close-element"],["close-element"],["text","\\n    "],["open-element","tr",[]],["flush-element"],["open-element","td",[]],["flush-element"],["text","submit"],["close-element"],["open-element","td",[]],["flush-element"],["text","em-submit"],["close-element"],["open-element","td",[]],["flush-element"],["text","Element used to create the submit button"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","        "],["append",["helper",["f","input"],null,[["label","property"],["Name","name"]]],false],["text","\\n"]],"locals":["f"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/form.hbs"}})}),define("dummy/templates/getstarted",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"cq2U8UUP",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","Getting Started"],["close-element"],["text","\\n"],["open-element","h2",[]],["flush-element"],["text","Installation"],["close-element"],["text","\\n\\n"],["open-element","i",[]],["flush-element"],["text","Ember Rapid Forms"],["close-element"],["text"," is an Ember CLI module and can be simply installed by:\\n\\n"],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","bash"],["flush-element"],["text","npm install --save-dev ember-rapid-forms"],["close-element"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Quick example"],["close-element"],["text","\\n\\n"],["open-element","h3",[]],["flush-element"],["text","Given the following controller:"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","coffeescript"],["flush-element"],["text","\\nMyController = Em.Controller.extend({\\n    genderOptions: Ember.A([\\n        {id: \'M\', name: \'Male\'}\\n        {id: \'F\', name: \'Female\'}\\n        {id: \'O\', name: \'Other\'}\\n    ]),\\n    actions:{\\n        submit(){\\n            alert (\\"Submitted!\\");\\n        }\\n    }\\n})\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n\\n"],["open-element","h3",[]],["flush-element"],["text","And the following model:"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","coffeescript"],["flush-element"],["text","\\nimport Ember from \'ember\';\\nimport DS from \'ember-data\';\\nimport { validator, buildValidations } from \'ember-cp-validations\';\\nimport InputErrors from \'ember-rapid-forms/mixins/input-errors\';\\nimport helper from \'ember-rapid-forms/mixins/ember-cp-validations-helper\';\\n\\nconst Validations = buildValidations({\\n    fullName: [\\n        validator(\'format\', {\\n            regex: /^[^\\\\s]+(\\\\s[^\\\\s]+)+$/,\\n            message: \'enter a first and last name\'\\n        }),\\n        validator(\'presence\', true)\\n    ],\\n    password: [\\n        validator(\'presence\', true),\\n        validator(\'length\', {\\n            min: 6\\n        })\\n    ],\\n    comment: validator(\'presence\', true),\\n    gender: validator(\'presence\', true)\\n});\\n\\nconst person = DS.Model.extend(Validations, InputErrors, helper, {\\n    firstName: DS.attr(\'string\', { defaultValue: null }),\\n    lastName: DS.attr(\'string\', { defaultValue: null }),\\n    password: DS.attr(\'string\'),\\n    comment: DS.attr(\'string\'),\\n    active: DS.attr(\'boolean\'),\\n    gender: DS.attr(\'string\'),\\n    nameHasValue: Ember.computed(\'fullName\', {\\n        get() {\\n            return !!this.get(\'fullName\');\\n        }\\n    }),\\n\\n    fullName: Ember.computed(\'firstName\', \'lastName\', {\\n        //jshint unused:false\\n        get() {\\n            if (this.get(\'firstName\')) {\\n                return `${this.get(\'firstName\')} ${this.get(\'lastName\')}`;\\n            }\\n            else {\\n                return null;\\n            }\\n        },\\n        set(key, value) {\\n            let [firstName, lastName] = value.split(/\\\\s+/);\\n            firstName = firstName ? firstName : null;\\n            lastName = lastName ? lastName : null;\\n            this.setProperties({ firstName, lastName });\\n            return value;\\n        }\\n    }),\\n\\n    asjson: Ember.computed(\'fullName\', \'firstName\', \'lastName\', \'password\', \'comment\', \'active\', \'gender\', function() {\\n        return \\"fullName: \\" + (this.get(\'fullName\')) + \\", firstName: \\" + (this.get(\'firstName\')) + \\", lastName: \\" + (this.get(\'lastName\')) + \\", password: \\" + (this.get(\'password\')) + \\", comment: \\" + (this.get(\'comment\')) + \\", active: \\" + (this.get(\'active\')) + \\", gender: \\" + (this.get(\'gender\'));\\n    })\\n});\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","i",[]],["flush-element"],["text","Note: for validation support you need: https://github.com/offirgolan/ember-cp-validations"],["close-element"],["text","\\n\\n"],["open-element","h3",[]],["flush-element"],["text","With this template:"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["open-element","pre",[]],["flush-element"],["open-element","code",[]],["static-attr","class","html"],["flush-element"],["text","\\n"],["text","{{#em-form model=model formLayout=layout as |form|}}\\n    "],["text","{{form.input property=\\"fullName\\" label=\\"Full Name\\" placeholder=\\"Enter a full name...\\" canShowErrors=model.visibleErrors.fullName}}\\n    "],["text","{{form.input property=\\"password\\" label=\\"Password\\" placeholder=\\"And password...\\" type=\\"password\\" disabled=nameHasValue canShowErrors=model.visibleErrors.password}}\\n    "],["text","{{form.text property=\\"comment\\" label=\\"Comment\\" placeholder=\\"Comment please..\\" rows=4 canShowErrors=model.visibleErrors.comment}}\\n    "],["text","{{form.select property=\\"gender\\" label=\\"Gender\\" prompt=\\"-select-\\" content=genderOptions optionValuePath=\\"id\\" optionLabelPath=\\"name\\" canShowErrors=model.visibleErrors.gender}}\\n    "],["text","{{form.checkbox property=\\"active\\" label=\\"Active?\\" canShowErrors=model.visibleErrors.active}}\\n    <div class=\\"form-group\\">\\n        <button class=\\"btn btn-default\\" "],["text","{{ action \\"validate\\" }}>Run Validations</button>\\n        <button class=\\"btn btn-default\\" "],["text","{{ action \\"clearValidations\\" }}>Clear Validations</button>\\n    </div>\\n"],["text","{{/em-form}}\\n    "],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h3",[]],["flush-element"],["text","I18n:"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","Ember Rapid Forms is compatible with Ember-i18n: https://github.com/jamesarosen/ember-i18n"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","The key \\"modelName.property\\" is searched and used if defined."],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","For example \\"person.firstName\\" will be used if the corresponding key is defined."],["close-element"],["text","\\n\\n\\n"],["open-element","h3",[]],["flush-element"],["text","The result would be:"],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["append",["helper",["form-sample"],null,[["model"],[["get",["model"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/getstarted.hbs"}})}),define("dummy/templates/inline",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"XBeXdA6k",block:'{"statements":[["text","Comming soon..."]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/inline.hbs"}})}),define("dummy/templates/inline/foo",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"BtIg48R3",block:'{"statements":[["block",["em-il-input"],null,null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","hello"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/inline/foo.hbs"}})}),define("dummy/templates/navbar",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"ZypoyONi",
block:'{"statements":[["open-element","nav",[]],["static-attr","role","navigation"],["static-attr","class","navbar navbar-default navbar-fixed-top"],["flush-element"],["text","\\n    "],["open-element","div",[]],["static-attr","class","container"],["flush-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","navbar-header"],["flush-element"],["text","\\n            "],["open-element","button",[]],["static-attr","type","buttonin"],["static-attr","data-toggle","collapse"],["static-attr","data-target",".navbar-ex1-collapse"],["static-attr","class","navbar-toggle"],["flush-element"],["text","\\n                "],["open-element","span",[]],["static-attr","class","sr-only"],["flush-element"],["text","Toggle navigation"],["close-element"],["text","\\n                "],["open-element","span",[]],["static-attr","class","icon-bar"],["flush-element"],["close-element"],["text","\\n                "],["open-element","span",[]],["static-attr","class","icon-bar"],["flush-element"],["close-element"],["text","\\n                "],["open-element","span",[]],["static-attr","class","icon-bar"],["flush-element"],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","a",[]],["static-attr","href","#"],["static-attr","class","navbar-brand"],["flush-element"],["text","Ember Rapid Forms"],["close-element"],["text","\\n        "],["close-element"],["text","\\n        "],["open-element","div",[]],["static-attr","class","collapse navbar-collapse navbar-ex1-collapse"],["flush-element"],["text","\\n            "],["open-element","ul",[]],["static-attr","class","nav navbar-nav"],["flush-element"],["text","\\n                "],["open-element","li",[]],["static-attr","class","active"],["flush-element"],["text","\\n                    "],["open-element","a",[]],["static-attr","href","#"],["flush-element"],["text","\\n                        "],["open-element","i",[]],["static-attr","class","fa fa-home"],["flush-element"],["close-element"],["text","\\n                        Home\\n                    "],["close-element"],["text","\\n                "],["close-element"],["text","\\n                "],["open-element","li",[]],["flush-element"],["text","\\n                    "],["open-element","a",[]],["static-attr","href","https://github.com/piceatech/ember-rapid-forms"],["flush-element"],["text","\\n                        "],["open-element","i",[]],["static-attr","class","fa fa-github-alt"],["flush-element"],["close-element"],["text","\\n                        Github\\n                    "],["close-element"],["text","\\n                "],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","form",[]],["static-attr","class","navbar-form navbar-right"],["flush-element"],["text","\\n                "],["open-element","a",[]],["static-attr","href","https://github.com/piceatech/ember-rapid-forms/archive/master.zip"],["static-attr","class","btn btn-success bold"],["flush-element"],["text","\\n                    "],["open-element","i",[]],["static-attr","class","fa fa-save"],["flush-element"],["close-element"],["text","\\n                    Download 1~ kb\\n                "],["close-element"],["text","\\n            "],["close-element"],["text","\\n            "],["open-element","div",[]],["static-attr","class","socials"],["flush-element"],["text","\\n                "],["open-element","ul",[]],["static-attr","class","bs-social-buttons"],["flush-element"],["text","\\n                    "],["open-element","li",[]],["flush-element"],["text","\\n                        "],["comment"," github "],["text","\\n                        "],["open-element","div",[]],["flush-element"],["text","\\n                        "],["open-element","iframe",[]],["static-attr","class","github-btn"],["static-attr","src","http://ghbtns.com/github-btn.html?user=piceatech&repo=ember-rapid-forms&type=watch&count=true"],["static-attr","width","100"],["static-attr","height","20"],["static-attr","title","Star on GitHub"],["flush-element"],["close-element"],["text","\\n                        "],["close-element"],["text","\\n                    "],["close-element"],["text","\\n                "],["close-element"],["text","\\n            "],["close-element"],["text","\\n        "],["close-element"],["text","\\n    "],["close-element"],["text","\\n"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/navbar.hbs"}})}),define("dummy/templates/overview",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"0GFzdsEO",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","Overview"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\n"],["open-element","b",[]],["flush-element"],["text","Ember Rapid Forms"],["close-element"],["text"," is a small library for "],["open-element","i",[]],["flush-element"],["text","Ember.js"],["close-element"],["text"," that allows you to create astonishing forms\\n    with support for "],["open-element","i",[]],["flush-element"],["text"," layouts, styles & validations"],["close-element"],["text"," thanks to the combination of the beauty of "],["open-element","i",[]],["flush-element"],["text","Bootstrap"],["close-element"],["text"," and the power of "],["open-element","i",[]],["flush-element"],["text","Ember"],["close-element"],["text",".\\n"],["close-element"],["text","\\n\\n"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n\\n"],["open-element","h4",[]],["flush-element"],["text","And here is the result in a nutshell..."],["close-element"],["text","\\n\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["append",["helper",["form-sample"],null,[["model"],[["get",["model"]]]]],false],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","well line-example"],["flush-element"],["text","\\n    "],["append",["unknown",["model","asjson"]],false],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h1",[]],["flush-element"],["text","Want to see more?"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\n    For getting started & installation steps, please visit "],["block",["link-to"],["getstarted"],null,1],["text","\\n"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\n    To see controls in action, visit "],["block",["link-to"],["controls"],null,0],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","Controls"]],"locals":[]},{"statements":[["text","Getting Started"]],"locals":[]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/overview.hbs"}})}),define("dummy/validators/alias",["exports","ember-cp-validations/validators/alias"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/belongs-to",["exports","ember-cp-validations/validators/belongs-to"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/collection",["exports","ember-cp-validations/validators/collection"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/confirmation",["exports","ember-cp-validations/validators/confirmation"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/date",["exports","ember-cp-validations/validators/date"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/dependent",["exports","ember-cp-validations/validators/dependent"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/ds-error",["exports","ember-cp-validations/validators/ds-error"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/exclusion",["exports","ember-cp-validations/validators/exclusion"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/format",["exports","ember-cp-validations/validators/format"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/has-many",["exports","ember-cp-validations/validators/has-many"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/inclusion",["exports","ember-cp-validations/validators/inclusion"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/length",["exports","ember-cp-validations/validators/length"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/messages",["exports","ember-cp-validations/validators/messages"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/number",["exports","ember-cp-validations/validators/number"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/validators/presence",["exports","ember-cp-validations/validators/presence"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/config/environment",["ember"],function(e){try{var t=document.querySelector('meta[name="dummy/config/environment"]').getAttribute("content"),l=JSON.parse(unescape(t)),n={default:l};return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(e){throw new Error('Could not read config from meta tag with name "dummy/config/environment".')}}),runningTests||require("dummy/app").default.create({name:"ember-rapid-forms",version:"1.0.0-beta12+e525164b"});